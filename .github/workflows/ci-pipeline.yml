name: CI Pipeline - Python App

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      # 1Ô∏è‚É£ Checkout code
      - name: Checkout repository
        uses: actions/checkout@v4

      # 2Ô∏è‚É£ Set up Python
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.12"

      # 3Ô∏è‚É£ Install dependencies
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      # 4Ô∏è‚É£ Linting (Static Code Analysis)
      - name: Lint code with flake8
        run: |
          pip install flake8
          flake8 .

  # 5Ô∏è‚É£ Security Scan (Bandit)
  security_scan:
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.12"
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
      - name: Bandit Security Scan
        run: |
          pip install bandit
          bandit -r . --severity-level high

  # 6Ô∏è‚É£ Trivy File System Scan
  trivy_fs_scan:
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
      - name: Trivy FS Scan
        uses: aquasecurity/trivy-action@0.20.0
        with:
          scan-type: fs
          ignore-unfixed: true
          severity: HIGH,CRITICAL
          format: table
          output: trivy-fs-scan.txt

  # 7Ô∏è‚É£ Unit tests + coverage
  test:
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.12"
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
      - name: Run Unit Tests with Coverage
        run: |
          pip install pytest pytest-cov
          # Make my_app importable
          export PYTHONPATH=$PYTHONPATH:$(pwd)
          pytest --cov=my_app --cov-report=term-missing --cov-fail-under=80

  # 8Ô∏è‚É£ Build Docker image
  docker_build:
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
      - name: Build Docker image
        run: |
          docker build -t app:latest .

  # 9Ô∏è‚É£ Docker Image Scan
  docker_scan:
    runs-on: ubuntu-latest
    needs: docker_build
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
      - name: Scan Docker Image
        run: |
          trivy image --exit-code 1 --severity CRITICAL,HIGH app:latest || true

  # üîü Push Docker image to Docker Hub
  docker_push:
    runs-on: ubuntu-latest
    needs: docker_scan
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
      - name: Push Docker image
        if: success()
        env:
          DOCKER_USER: ${{ secrets.DOCKER_USER }}
          DOCKER_PASS: ${{ secrets.DOCKER_PASS }}
          DOCKER_REPO: ${{ secrets.DOCKER_REPO }}
        run: |
          docker login -u $DOCKER_USER -p $DOCKER_PASS
          docker tag app:latest $DOCKER_REPO/app:latest
          docker push $DOCKER_REPO/app:latest
